/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.table.DefaultTableModel;

import dao.Toa_dao;
import entity.TauEntity;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;
import bus.ChatLieu_bus;
import bus.ChuongTrinhKhuyenMai_bus;
import bus.DanhMucSanPham_bus;
import dao.Ga_dao;
import dao.Tau_dao;
import entity.*;

import java.io.File;
import java.util.*;

import javax.swing.table.DefaultTableModel;
import bus.SanPham_bus;
import bus.ThuongHieu_bus;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.CodeSource;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.LayoutStyle;
import util.GenerateID;
import util.ToanCuc;


/**
 *
 * @author ploc2
 */
public class QuanLyGhe_JPanel extends javax.swing.JFrame {


    private Toa_dao toa_dao;
    private DefaultTableModel model;
//        private String maTauHienTai = "";
    private TauEntity tauHienTai = null;
    /**
     * Creates new form QuanLyGhe_JPanel
     */
    public QuanLyGhe_JPanel(TauEntity tau ) {
        



    /**
     * Creates new form QuanLyToa_JPanel
     */
        tauHienTai = tau;
        toa_dao = new Toa_dao();

        //super("Quản Lý Toa");
        initComponents();

        this.setTitle("Quản lý Toa");
        this.setVisible(true);

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); 

        lbl_TenTau.setText("Mã: " + tauHienTai.getMaTau() + " - Tên tàu: " + tauHienTai.getTenTau() + " - Số toa: " + tauHienTai.getSoToa());

        model = new DefaultTableModel(new String [] {
            "Mã", "Tên", "Số ghế", "Loại toa", "Trạng thái", "Ngày tạo", "Ngày cập nhật"
        }, 0);


        txt_trangThai.setEditable(true);

        loadDuLieuTuDataLenTable();

        btn_CapNhat.setEnabled(false);
        btn_DoiTrangThai.setEnabled(false);
        // btn_Them.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_Them = new javax.swing.JButton();
        btn_CapNhat = new javax.swing.JButton();
        lbl_TenTau = new javax.swing.JLabel();
        txt_tenToa = new javax.swing.JTextField();
        lbl_MaSanPham1 = new javax.swing.JLabel();
        txt_trangThai = new javax.swing.JTextField();
        lbl_MaSanPham2 = new javax.swing.JLabel();
        btn_DoiTrangThai = new javax.swing.JButton();
        txt_MaToa = new javax.swing.JTextField();
        txt_SoGhe = new javax.swing.JTextField();
        lbl_MaSanPham3 = new javax.swing.JLabel();
        lbl_MaSanPham4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_danhSachToa = new javax.swing.JTable();
        lbl_MaSanPham5 = new javax.swing.JLabel();
        txt_loai = new javax.swing.JTextField();
        btn_TaoToaTuDong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(187, 205, 197));

        btn_Them.setBackground(new java.awt.Color(0, 51, 51));
        btn_Them.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_Them.setForeground(java.awt.Color.white);
        btn_Them.setText("Thêm");
        btn_Them.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Them.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_Them.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_CapNhat.setBackground(new java.awt.Color(0, 51, 51));
        btn_CapNhat.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_CapNhat.setForeground(java.awt.Color.white);
        btn_CapNhat.setText("Cập nhật");
        btn_CapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_CapNhat.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_CapNhat.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatActionPerformed(evt);
            }
        });

        lbl_TenTau.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl_TenTau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_TenTau.setText("TÀU");
        lbl_TenTau.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_tenToa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_tenToa.setMargin(new java.awt.Insets(0, 0, 0, 0));
        txt_MaToa.setEditable(false);

        lbl_MaSanPham1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham1.setText("Tên Toa");
        lbl_MaSanPham1.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_trangThai.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_trangThai.setMargin(new java.awt.Insets(0, 0, 0, 0));

        lbl_MaSanPham2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham2.setText("Trạng thái");
        lbl_MaSanPham2.setPreferredSize(new java.awt.Dimension(85, 15));

        btn_DoiTrangThai.setBackground(new java.awt.Color(0, 51, 51));
        btn_DoiTrangThai.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_DoiTrangThai.setForeground(java.awt.Color.white);
        btn_DoiTrangThai.setText("Đổi trạng thái");
        btn_DoiTrangThai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_DoiTrangThai.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_DoiTrangThai.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_DoiTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DoiTrangThaiActionPerformed(evt);
            }
        });

        txt_MaToa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_MaToa.setMargin(new java.awt.Insets(0, 0, 0, 0));

        txt_SoGhe.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_SoGhe.setMargin(new java.awt.Insets(0, 0, 0, 0));
        txt_MaToa.setEditable(false);
        txt_SoGhe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SoGheActionPerformed(evt);
            }
        });

        lbl_MaSanPham3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham3.setText("Số Ghế");
        lbl_MaSanPham3.setPreferredSize(new java.awt.Dimension(85, 15));

        lbl_MaSanPham4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham4.setText("Mã Toa");
        lbl_MaSanPham4.setPreferredSize(new java.awt.Dimension(85, 15));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách Toa"));

        jScrollPane1.setBackground(new java.awt.Color(187, 205, 197));

        jTable_danhSachToa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã", "Tên", "Số ghế", "Loại toa", "Trạng thái", "Ngày tạo", "Ngày cập nhật"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_danhSachToa.setColumnSelectionAllowed(true);
        jTable_danhSachToa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jTable_danhSachToa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable_danhSachToa.setShowHorizontalLines(true);
        jTable_danhSachToa.setShowVerticalLines(true);
        jTable_danhSachToa.getTableHeader().setResizingAllowed(false);
        jTable_danhSachToa.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(jTable_danhSachToa);
        jTable_danhSachToa.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTable_danhSachToa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_DanhSachToaMouseClicked(evt);
            }
        });
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_MaSanPham5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham5.setText("Loại toa");
        lbl_MaSanPham5.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_loai.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_loai.setMargin(new java.awt.Insets(0, 0, 0, 0));
        txt_MaToa.setEditable(false);
        txt_loai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_loaiActionPerformed(evt);
            }
        });

        btn_TaoToaTuDong.setBackground(new java.awt.Color(0, 51, 51));
        btn_TaoToaTuDong.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_TaoToaTuDong.setForeground(java.awt.Color.white);
        btn_TaoToaTuDong.setText("Tạo Toa tự động");
        btn_TaoToaTuDong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_TaoToaTuDong.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_TaoToaTuDong.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_TaoToaTuDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TaoToaTuDongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_TenTau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_MaSanPham3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_SoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_MaSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbl_MaSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbl_MaSanPham4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txt_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(102, 102, 102)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btn_TaoToaTuDong, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                                    .addComponent(btn_DoiTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txt_tenToa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_MaToa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(101, 101, 101)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btn_Them, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                                    .addComponent(btn_CapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_MaSanPham5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_loai, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 213, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbl_TenTau, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_MaToa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_MaSanPham4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MaSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tenToa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_MaSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_DoiTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_SoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_TaoToaTuDong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_MaSanPham3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_loai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_MaSanPham5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void btn_DoiTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        doiTrangThaiToa();
    }                                                

    private void btn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {                                            
        capNhatToa();
    }                                           

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {
        themToa();
    }

    private void txt_SoGheActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txt_loaiActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void btn_TaoToaTuDongActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void themToa() {
        try {
        //     // get dữ liệu txt_MaToa txt_tenToa txt_trangThai
        // String maToa = txt_MaToa.getText();

        // if(maToa.isEmpty() || toa_dao.kiemTraMaToa(maToa, tauHienTai) ) {
        //     JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin hoặc sử dụng tên toa khác");
        //     return;
        // }
            // String maToa = GenerateID.sinhMa("TOA");
                    // check đã đủ toa chưa, nếu đủ rồi không cho tạo nữa
        int soToaHienTai = toa_dao.laySoLuongToaTheoTau(tauHienTai.getMaTau());
        System.out.println("soToaHienTai: " + soToaHienTai + " - " + tauHienTai.getSoToa());
        if(soToaHienTai >= tauHienTai.getSoToa()) {
            JOptionPane.showMessageDialog(null, "Bạn đã sử dụng tối đa toa, không thể tạo toa mới");
            return;
        }

        ToaTauEntity toa =  validateToaTau();
        // toa.setMaToa(maToa);
        //  boolean kq = ;
        if (toa_dao.themToa(toa) && toa != null )  {
            JOptionPane.showMessageDialog(null, "Thêm Toa thành công");
            lamMoi();
        } else {
            JOptionPane.showMessageDialog(null, "Thêm Toa không thành công");
        }
        
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println("Có lỗi xảy ra khi thêm bản ghi: " + e.getMessage());
    }
    }

    public ToaTauEntity validateToaTau() {
        // get dữ liệu txt_MaToa txt_tenToa txt_trangThai
        String tenToa = txt_tenToa.getText();

        int trangThai =1 ;  //txt_trangThai.getText().equals("Đang sử dụng") ? 1 : 0; //Integer.parseInt(txt_trangThai.getText());
        int soGhe = Integer.parseInt(txt_SoGhe.getText());
        int loaiToa = 1;

        if(tenToa.isEmpty() || !(soGhe > 0)  ) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin");
            return null;
        }

        if(toa_dao.kiemTraTenToa(tenToa, tauHienTai) ) {
            JOptionPane.showMessageDialog(null, "Mã Toa hoặc Tên Toa đã tồn tại");
            return null;
        }

        ToaTauEntity toa = new ToaTauEntity(tenToa, soGhe, loaiToa,  trangThai, tauHienTai);

        return toa;
    }

    private void lamMoi() {
            txt_MaToa.setText("");
            txt_tenToa.setText("");
            txt_trangThai.setText("");
            txt_SoGhe.setText("0");
            txt_loai.setText("Toa chở người");

            btn_CapNhat.setEnabled(false);
            btn_DoiTrangThai.setEnabled(false);
            btn_TaoToaTuDong.setEnabled(true);
            btn_Them.setEnabled(true);

            loadDuLieuTuDataLenTable();
    }

    private void loadDuLieuTuDataLenTable() {
        ArrayList<ToaTauEntity> dsToa = toa_dao.getAllToaTau(tauHienTai.getMaTau());
        System.out.println( "loadDuLieuTuDataLenTable"  + dsToa.toString());

        model.setRowCount(0);

        
        for (ToaTauEntity toa : dsToa) {   

            String trangThai = TauEnum.TinhTrangTau.convertTinhTrangTauToString(toa.getTrangThai())  ;
            String loaiToa = TauEnum.LoaiToa.convertLoaiToaToString(toa.getLoai());
            model.addRow(new Object[]{
                    toa.getMaToa(), toa.getTenToa(), toa.getSoGhe(),loaiToa,  trangThai, toa.getNgayTao(), toa.getNgayCapNhat()
            });
        }

        // add data to jTable
        jTable_danhSachToa.setModel(model);

    }

    private void capNhatToa() {
        try {
            // get dữ liệu txt_MaToa txt_tenToa txt_trangThai
        String maToa = txt_MaToa.getText();

        ToaTauEntity toa = validateToaTau();
        if(toa == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin");
            return;
        }

        toa.setMaToa(maToa);

        if (toa_dao.capNhatToa(toa))  {
            JOptionPane.showMessageDialog(null, "Cập nhật Toa thành công");
            lamMoi();
        } else {
            JOptionPane.showMessageDialog(null, "Cập nhật Toa không thành công");
        }
        
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println("Có lỗi xảy ra khi thêm bản ghi: " + e.getMessage());
    }
    }

    private void doiTrangThaiToa() {
        try {
            // get dữ liệu txt_MaToa txt_tenToa txt_trangThai
            String maToa = txt_MaToa.getText();

            ToaTauEntity toa = validateToaTau();

            if(toa == null) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin");
                return;
            }

            toa.setMaToa(maToa);
            boolean kq = toa_dao.doiTrangThaiToa(toa, tauHienTai);      
            
            if (kq) {
                JOptionPane.showMessageDialog(null, "Đổi trạng thái thành công");
                lamMoi();
            } else {
                JOptionPane.showMessageDialog(null, "Đổi trạng thái không thành công");
            }
        }
        catch (Exception e) {
            e.printStackTrace();
            System.out.println("Có lỗi xảy ra khi thêm bản ghi: " + e.getMessage());
        }
        
    }

    private void table_DanhSachToaMouseClicked(MouseEvent evt) {
        int row = jTable_danhSachToa.getSelectedRow();

        txt_MaToa.setText(model.getValueAt(row, 0).toString());
        txt_tenToa.setText(model.getValueAt(row, 1).toString());
        txt_SoGhe.setText(model.getValueAt(row, 2).toString());
        txt_loai.setText(model.getValueAt(row, 3).toString());
        txt_trangThai.setText(model.getValueAt(row, 4).toString());

        // btn_Them.setEnabled(false);

        btn_CapNhat.setEnabled(true);
        btn_DoiTrangThai.setEnabled(true);
        btn_Them.setEnabled(false);
        btn_TaoToaTuDong.setEnabled(false);
    
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_CapNhat;
    private javax.swing.JButton btn_DoiTrangThai;
    private javax.swing.JButton btn_TaoToaTuDong;
    private javax.swing.JButton btn_Them;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_danhSachToa;
    private javax.swing.JLabel lbl_MaSanPham1;
    private javax.swing.JLabel lbl_MaSanPham2;
    private javax.swing.JLabel lbl_MaSanPham3;
    private javax.swing.JLabel lbl_MaSanPham4;
    private javax.swing.JLabel lbl_MaSanPham5;
    private javax.swing.JLabel lbl_TenTau;
    private javax.swing.JTextField txt_MaToa;
    private javax.swing.JTextField txt_SoGhe;
    private javax.swing.JTextField txt_loai;
    private javax.swing.JTextField txt_tenToa;
    private javax.swing.JTextField txt_trangThai;
    // End of variables declaration                   
}

//Căn giữa cột trong table
class CenterRenderer extends DefaultTableCellRenderer {

    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        ((JLabel) c).setHorizontalAlignment(SwingConstants.CENTER);
        return c;
    }
}