/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.Component;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import dao.Ga_dao;
import entity.GaTauEntity;
import entity.NhanVienEntity;
import entity.TauEnum;
import util.ToanCuc;

/**
 *
 * @author ploc2
 */
public class QuanLyGa_JPanel extends javax.swing.JFrame {

        private Ga_dao ga_dao;
        private DefaultTableModel model;


    /**
     * Creates new form QuanLyGa_JPanel
     */
    public QuanLyGa_JPanel() {
        //super("Quản Lý Ga");
        initComponents();
        this.setTitle("Quản lý Ga");
        // Center the frame on the screen
        
        ga_dao = new Ga_dao();

        model = new DefaultTableModel(new String[]{"Mã", "Tên", "Trạng thái"}, 0);

        loadDuLieuTuDataLenTable();

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); 
        
        this.setVisible(true);

        btn_CapNhat.setEnabled(false);
        btn_DoiTrangThai.setEnabled(false);
        // btn_Them.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_Them = new javax.swing.JButton();
        btn_CapNhat = new javax.swing.JButton();
        lbl_MaSanPham = new javax.swing.JLabel();
        txt_tenGa = new javax.swing.JTextField();
        lbl_MaSanPham1 = new javax.swing.JLabel();
        txt_trangThai = new javax.swing.JTextField();
        lbl_MaSanPham2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_danhSachGa = new javax.swing.JTable();
        btn_DoiTrangThai = new javax.swing.JButton();
        txt_MaGa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(187, 205, 197));

        btn_Them.setBackground(new java.awt.Color(0, 51, 51));
        btn_Them.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_Them.setForeground(java.awt.Color.white);
        btn_Them.setText("Thêm");
        btn_Them.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Them.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_Them.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_CapNhat.setBackground(new java.awt.Color(0, 51, 51));
        btn_CapNhat.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_CapNhat.setForeground(java.awt.Color.white);
        btn_CapNhat.setText("Cập nhật");
        btn_CapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_CapNhat.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_CapNhat.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatActionPerformed(evt);
            }
        });

        lbl_MaSanPham.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham.setText("Mã ga");
        lbl_MaSanPham.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_tenGa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_MaSanPham1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham1.setText("Tên ga");
        lbl_MaSanPham1.setPreferredSize(new java.awt.Dimension(85, 15));

        txt_trangThai.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_MaSanPham2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbl_MaSanPham2.setText("Trạng thái");
        lbl_MaSanPham2.setPreferredSize(new java.awt.Dimension(85, 15));

        jScrollPane1.setBackground(new java.awt.Color(187, 205, 197));

        jTable_danhSachGa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã", "Tên", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_danhSachGa.setColumnSelectionAllowed(true);
        jTable_danhSachGa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jTable_danhSachGa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable_danhSachGa.setShowHorizontalLines(true);
        jTable_danhSachGa.setShowVerticalLines(true);
        jTable_danhSachGa.getTableHeader().setResizingAllowed(false);
        jTable_danhSachGa.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(jTable_danhSachGa);
        jTable_danhSachGa.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btn_DoiTrangThai.setBackground(new java.awt.Color(0, 51, 51));
        btn_DoiTrangThai.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_DoiTrangThai.setForeground(java.awt.Color.white);
        btn_DoiTrangThai.setText("Đổi trạng thái");
        btn_DoiTrangThai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_DoiTrangThai.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_DoiTrangThai.setPreferredSize(new java.awt.Dimension(90, 31));
        btn_DoiTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DoiTrangThaiActionPerformed(evt);
            }
        });

        txt_MaGa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_MaSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_MaSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_MaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_tenGa, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(txt_trangThai, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(txt_MaGa))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_CapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_DoiTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(btn_Them, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(169, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_MaGa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_tenGa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lbl_MaSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_DoiTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lbl_MaSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(129, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        themGa();
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void themGa() {
        try {
            // get dữ liệu txt_MaGa txt_tenGa txt_trangThai
        String maGa = txt_MaGa.getText();
        String tenGa = txt_tenGa.getText();
        int trangThai =  1; //Integer.parseInt(txt_trangThai.getText());

        if(maGa.isEmpty() || tenGa.isEmpty() ) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin");
            return;
        }

        if(ga_dao.kiemTraMaGa(maGa)  || ga_dao.kiemTraTenGa(tenGa)) {
            JOptionPane.showMessageDialog(null, "Mã Ga hoặc Tên Ga đã tồn tại");
            return;
        }

        NhanVienEntity nhanVien = new NhanVienEntity(ToanCuc.getMa());

        GaTauEntity ga = new GaTauEntity(maGa, tenGa, trangThai, nhanVien);

         boolean kq = ga_dao.themGa(ga);
        if (kq) {
            JOptionPane.showMessageDialog(null, "Thêm Ga thành công");
            lamMoi();
        } else {
            JOptionPane.showMessageDialog(null, "Thêm Ga không thành công");
        }
        
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println("Có lỗi xảy ra khi thêm bản ghi: " + e.getMessage());
    }
    }

    private void lamMoi() {
            txt_MaGa.setText("");
            txt_tenGa.setText("");
            txt_trangThai.setText("");

            loadDuLieuTuDataLenTable();
    }

    private void loadDuLieuTuDataLenTable() {
        ArrayList<GaTauEntity> dsGa = ga_dao.getAllGaTau();
        System.out.println( "loadDuLieuTuDataLenTable"  + dsGa.toString());

        model.setRowCount(0);

        
        for (GaTauEntity ga : dsGa) {   

            String trangThai = TauEnum.TinhTrangTau.convertTinhTrangTauToString(ga.getTrangThai())  ;
            model.addRow(new Object[]{
                    ga.getMaGa(), ga.getTenGa(), trangThai
            });
        }

        // add data to jTable
        System.out.println( "loadDuLieuTuDataLenTable"  + model.toString());

        jTable_danhSachGa.setModel(model);

    }

    private void btn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatActionPerformed
        capNhatGa();
    }//GEN-LAST:event_btn_CapNhatActionPerformed

    private void capNhatGa() {
        try {
            // get dữ liệu txt_MaGa txt_tenGa txt_trangThai
        String maGa = txt_MaGa.getText();
        String tenGa = txt_tenGa.getText();
        int trangThai =  1; //Integer.parseInt(txt_trangThai.getText());

        if(ga_dao.kiemTraTenGa( tenGa)) {
            JOptionPane.showMessageDialog(null, "Tên Ga đã tồn tại");
            return;
        }

        NhanVienEntity nhanVien = new NhanVienEntity(ToanCuc.getMa());

        GaTauEntity ga = new GaTauEntity(maGa, tenGa, trangThai, nhanVien);

         boolean kq = ga_dao.capNhatGa(ga);

        if (kq) {
            JOptionPane.showMessageDialog(null, "Cập nhật Ga thành công");
            lamMoi();
        } else {
            JOptionPane.showMessageDialog(null, "Cập nhật Ga không thành công");
        }
        
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println("Có lỗi xảy ra khi thêm bản ghi: " + e.getMessage());
    }
    }

    private void btn_DoiTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DoiTrangThaiActionPerformed
        doiTrangThaiGa();
    }//GEN-LAST:event_btn_DoiTrangThaiActionPerformed

    private void doiTrangThaiGa() {
        try {
            // get dữ liệu txt_MaGa txt_tenGa txt_trangThai
            String maGa = txt_MaGa.getText();
            String tenGa = txt_tenGa.getText();
            int trangThai =  txt_trangThai.getText().equals("Đang sử dụng") ? 1 : 0; //Integer.parseInt(txt_trangThai.getText());
            GaTauEntity ga = new GaTauEntity(maGa, tenGa, trangThai);
            boolean kq = ga_dao.doiTrangThaiGa(ga);
            
            if (kq) {
                JOptionPane.showMessageDialog(null, "Đổi trạng thái thành công");
                lamMoi();
            } else {
                JOptionPane.showMessageDialog(null, "Đổi trạng thái không thành công");
            }
        }
        catch (Exception e) {
            e.printStackTrace();
            System.out.println("Có lỗi xảy ra khi thêm bản ghi: " + e.getMessage());
        }
        
    }

    private void table_DanhSachGaMouseClicked(MouseEvent evt) {
        int row = jTable_danhSachGa.getSelectedRow();

        txt_MaGa.setText(model.getValueAt(row, 0).toString());
        txt_tenGa.setText(model.getValueAt(row, 1).toString());
        txt_trangThai.setText(model.getValueAt(row, 2).toString());
        
        // btn_Them.setEnabled(false);

        btn_CapNhat.setEnabled(true);
        btn_DoiTrangThai.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhat;
    private javax.swing.JButton btn_DoiTrangThai;
    private javax.swing.JButton btn_Them;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_danhSachGa;
    private javax.swing.JLabel lbl_MaSanPham;
    private javax.swing.JLabel lbl_MaSanPham1;
    private javax.swing.JLabel lbl_MaSanPham2;
    private javax.swing.JTextField txt_MaGa;
    private javax.swing.JTextField txt_tenGa;
    private javax.swing.JTextField txt_trangThai;
    // End of variables declaration//GEN-END:variables
}

//Căn giữa cột trong table
class CenterRenderer extends DefaultTableCellRenderer {

    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        ((JLabel) c).setHorizontalAlignment(SwingConstants.CENTER);
        return c;
    }
}
